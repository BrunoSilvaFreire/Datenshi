//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Datenshi.Scripts.Entities.Components.AnimatedComponent animated { get { return (Datenshi.Scripts.Entities.Components.AnimatedComponent)GetComponent(GameComponentsLookup.Animated); } }
    public bool hasAnimated { get { return HasComponent(GameComponentsLookup.Animated); } }

    public void AddAnimated(UnityEngine.Animator newAnimatorPrefab) {
        var index = GameComponentsLookup.Animated;
        var component = CreateComponent<Datenshi.Scripts.Entities.Components.AnimatedComponent>(index);
        component.AnimatorPrefab = newAnimatorPrefab;
        AddComponent(index, component);
    }

    public void ReplaceAnimated(UnityEngine.Animator newAnimatorPrefab) {
        var index = GameComponentsLookup.Animated;
        var component = CreateComponent<Datenshi.Scripts.Entities.Components.AnimatedComponent>(index);
        component.AnimatorPrefab = newAnimatorPrefab;
        ReplaceComponent(index, component);
    }

    public void RemoveAnimated() {
        RemoveComponent(GameComponentsLookup.Animated);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimated;

    public static Entitas.IMatcher<GameEntity> Animated {
        get {
            if (_matcherAnimated == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Animated);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimated = matcher;
            }

            return _matcherAnimated;
        }
    }
}
