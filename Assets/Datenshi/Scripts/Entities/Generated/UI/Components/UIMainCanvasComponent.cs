//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIContext {

    public UIEntity mainCanvasEntity { get { return GetGroup(UIMatcher.MainCanvas).GetSingleEntity(); } }
    public Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent mainCanvas { get { return mainCanvasEntity.mainCanvas; } }
    public bool hasMainCanvas { get { return mainCanvasEntity != null; } }

    public UIEntity SetMainCanvas(UnityEngine.Canvas newCanvas) {
        if (hasMainCanvas) {
            throw new Entitas.EntitasException("Could not set MainCanvas!\n" + this + " already has an entity with Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent!",
                "You should check if the context already has a mainCanvasEntity before setting it or use context.ReplaceMainCanvas().");
        }
        var entity = CreateEntity();
        entity.AddMainCanvas(newCanvas);
        return entity;
    }

    public void ReplaceMainCanvas(UnityEngine.Canvas newCanvas) {
        var entity = mainCanvasEntity;
        if (entity == null) {
            entity = SetMainCanvas(newCanvas);
        } else {
            entity.ReplaceMainCanvas(newCanvas);
        }
    }

    public void RemoveMainCanvas() {
        mainCanvasEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    public Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent mainCanvas { get { return (Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent)GetComponent(UIComponentsLookup.MainCanvas); } }
    public bool hasMainCanvas { get { return HasComponent(UIComponentsLookup.MainCanvas); } }

    public void AddMainCanvas(UnityEngine.Canvas newCanvas) {
        var index = UIComponentsLookup.MainCanvas;
        var component = CreateComponent<Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent>(index);
        component.Canvas = newCanvas;
        AddComponent(index, component);
    }

    public void ReplaceMainCanvas(UnityEngine.Canvas newCanvas) {
        var index = UIComponentsLookup.MainCanvas;
        var component = CreateComponent<Datenshi.Scripts.Entities.Components.UI.MainCanvasComponent>(index);
        component.Canvas = newCanvas;
        ReplaceComponent(index, component);
    }

    public void RemoveMainCanvas() {
        RemoveComponent(UIComponentsLookup.MainCanvas);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIMatcher {

    static Entitas.IMatcher<UIEntity> _matcherMainCanvas;

    public static Entitas.IMatcher<UIEntity> MainCanvas {
        get {
            if (_matcherMainCanvas == null) {
                var matcher = (Entitas.Matcher<UIEntity>)Entitas.Matcher<UIEntity>.AllOf(UIComponentsLookup.MainCanvas);
                matcher.componentNames = UIComponentsLookup.componentNames;
                _matcherMainCanvas = matcher;
            }

            return _matcherMainCanvas;
        }
    }
}
